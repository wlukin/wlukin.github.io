{"version":3,"file":"js/game-shuffle-letters.1218a55d.js","mappings":"0PACIA,EAAAA,EAAAA,IAUEC,EAAA,CATGC,UAAWC,EAAAA,UACXC,WAAYD,EAAAA,WACZE,WAAYF,EAAAA,WACZG,UAAWH,EAAAA,UACXI,iBAAgBC,EAAAA,eAChBC,kBAAiBD,EAAAA,gBACjBE,sBAAqBP,EAAAA,iBACrBQ,mBAAkBR,EAAAA,cAClBS,oBAAmBT,EAAAA,iBATxB,qK,iEAqBJ,GACIU,OAAQ,CACJC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,GAEJC,WAAY,CACRC,gBAAeA,EAAAA,GAEnBC,QAAS,CACLC,eAAeC,GACNC,KAAKC,WAAWF,IACjBC,KAAKE,eAAeF,KAAKG,iBAAiBH,KAAKlB,YAAaiB,GAAW,EAE9E,EACDK,gBAAgBC,IACY,IAApBL,KAAKnB,YAAuBmB,KAAKC,WAAWI,KAC5CL,KAAKM,WAAWN,KAAKO,iBAAiBP,KAAKjB,UAAWsB,EAAWG,aACjER,KAAKS,kBAAkBT,KAAKlB,WAAYuB,EAAWK,GAAIV,KAAKjB,WAEnE,EACD4B,oBACI,OAAOX,KAAKY,wBAAwB,MAAM,KAC7C,EACDC,iBACI,OAAOC,EAAAA,EAAAA,IAAmBd,KAAKe,cAAcC,KACzC,CAACC,EAAGC,IACOlB,KAAKmB,iBAAiBD,EAAGD,IAG3C,EACDG,kBACI,OAAOC,EAAAA,EAAAA,IAAUrB,KAAKe,cAAcC,KAAI,CAACC,EAAGC,IACjClB,KAAKmB,iBAAiBD,EAAG,OAExC,I,QCrDR,MAAMI,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://navchayko/./src/views/games/ShuffleLettersView.vue","webpack://navchayko/./src/views/games/ShuffleLettersView.vue?0434"],"sourcesContent":["<template>\n    <InputResultGame\n        :inputFlag=\"inputFlag\"\n        :resultFlag=\"resultFlag\"\n        :resultList=\"resultList\"\n        :inputList=\"inputList\"\n        @clickTileInput=\"clickTileInput\"\n        @clickTileResult=\"clickTileResult\"\n        @clickControlRefresh=\"gameRefreshLevel\"\n        @clickControlNext=\"gameNextLevel\"\n        @clickControlCheck=\"gameCheckResult\"\n    />\n</template>\n\n<script>\nimport tileMixin from '@/mixins/tileMixin';\nimport tileListMixin from '@/mixins/tileListMixin';\nimport dictionaryMixin from '@/mixins/dictionaryMixin';\nimport inputResultGameMixin from '@/mixins/inputResultGameMixin';\nimport InputResultGame from '@/components/InputResultGame'\nimport { getRandomValueList, arrayFrom } from '@/utils';\n\nexport default {\n    mixins: [\n        tileMixin,\n        tileListMixin,\n        dictionaryMixin,\n        inputResultGameMixin,\n    ],\n    components: {\n        InputResultGame,\n    },\n    methods: {\n        clickTileInput(inputTile) {\n            if (!this.tileIsUsed(inputTile)) {\n                this.tileBindByTile(this.tileListFindIdle(this.resultList), inputTile, true);\n            }\n        },\n        clickTileResult(resultTile) {\n            if (this.resultFlag !== true && this.tileIsUsed(resultTile)) {\n                this.tileUnbind(this.tileListFindById(this.inputList, resultTile.relationId));\n                this.tileListRemoveGap(this.resultList, resultTile.id, this.inputList);\n            }\n        },\n        buildAssertResult() {\n            return this.dictionaryGetWordByList('ua')['ua'];\n        },\n        buildInputList() {\n            return getRandomValueList(this.assertResult).map(\n                (v, i) => {\n                    return this.tileLetterCreate(i, v);\n                }\n            );\n        },\n        buildResultList() {\n            return arrayFrom(this.assertResult).map((v, i) => {\n                return this.tileLetterCreate(i, null);\n            });\n        }\n    },\n}\n</script>","import { render } from \"./ShuffleLettersView.vue?vue&type=template&id=5d54bbfa\"\nimport script from \"./ShuffleLettersView.vue?vue&type=script&lang=js\"\nexport * from \"./ShuffleLettersView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_InputResultGame","inputFlag","_ctx","resultFlag","resultList","inputList","onClickTileInput","$options","onClickTileResult","onClickControlRefresh","onClickControlNext","onClickControlCheck","mixins","tileMixin","tileListMixin","dictionaryMixin","inputResultGameMixin","components","InputResultGame","methods","clickTileInput","inputTile","this","tileIsUsed","tileBindByTile","tileListFindIdle","clickTileResult","resultTile","tileUnbind","tileListFindById","relationId","tileListRemoveGap","id","buildAssertResult","dictionaryGetWordByList","buildInputList","getRandomValueList","assertResult","map","v","i","tileLetterCreate","buildResultList","arrayFrom","__exports__","render"],"sourceRoot":""}