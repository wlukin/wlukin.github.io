{"version":3,"file":"js/game-alphabet-letters.f3242d42.js","mappings":"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","sources":["webpack://navchayko/./src/config/gamesList.js","webpack://navchayko/./src/mixins/modeMixin.js","webpack://navchayko/./src/views/games/AlphabetLettersView.vue","webpack://navchayko/./src/views/games/AlphabetLettersView.vue?d4bb"],"sourcesContent":["export default [\n    {\n        id: 'a',\n        name: 'Ї К А Ж',\n        description: 'Збери слово із літер',\n        route: 'game-shuffle-letters',\n    },\n    {\n        id: 'b',\n        name: '? Л О Н',\n        description: 'Додай в слово пропущену літеру',\n        route: 'game-first-letter',\n    },\n    {\n        id: 'c',\n        name: 'А Б ? Г',\n        description: 'Українська абетка',\n        modes: {\n            1: {lang: 'ua', lettersNumber: 3},\n            2: {lang: 'ua', lettersNumber: 5},\n            3: {lang: 'ua', lettersNumber: 7},\n            4: {lang: 'ua', lettersNumber: 9},\n            5: {lang: 'ua', lettersNumber: 11},\n        },\n        route: 'game-alphabet-letters',\n    },\n    {\n        id: 'f',\n        name: 'A B ? D',\n        description: 'Англійська абетка',\n        modes: {\n            1: {lang: 'en', lettersNumber: 3},\n            2: {lang: 'en', lettersNumber: 5},\n            3: {lang: 'en', lettersNumber: 7},\n            4: {lang: 'en', lettersNumber: 9},\n            5: {lang: 'en', lettersNumber: 11},\n        },\n        route: 'game-alphabet-letters',\n    },\n    {\n        id: 'd',\n        name: '8 + 5 = ?',\n        description: 'Приклади на додавання та віднімання',\n        modes: {\n            1: { sign: { plus: true, minus: true }, side: { right: true, left: false }, maxSum: 10 },\n            2: { sign: { plus: true, minus: true }, side: { right: true, left: false }, minSum: 10, maxSum: 20, minTerm: 1 },\n            3: { sign: { plus: true, minus: true }, side: { right: true, left: false }, minSum: 20, maxSum: 100, minTerm: 1, maxOneTerm: 10, simplerOrder: true },\n            4: { sign: { plus: true, minus: true }, side: { right: true, left: false }, maxSum: 100, minTerm: 10, maxOneTerm: 20, simplerOrder: true },\n            5: { sign: { plus: true, minus: true }, side: { right: true, left: false }, maxSum: 100, minTerm: 11 },\n        },\n        route: 'game-math',\n    },\n    {\n        id: 'e',\n        name: '7 - ? = 2',\n        description: 'Рівняння на додавання та віднімання',\n        modes: {\n            1: { sign: { plus: true, minus: true }, side: { right: false, left: true }, maxSum: 10 },\n            2: { sign: { plus: true, minus: true }, side: { right: false, left: true }, minSum: 10, maxSum: 20, minTerm: 1 },\n            3: { sign: { plus: true, minus: true }, side: { right: false, left: true }, minSum: 20, maxSum: 100, minTerm: 1, maxTerm: 10, simplerOrder: true },\n            4: { sign: { plus: true, minus: true }, side: { right: false, left: true }, maxSum: 100, minTerm: 10, maxTerm: 20, simplerOrder: true },\n            5: { sign: { plus: true, minus: true }, side: { right: false, left: true }, maxSum: 100, minTerm: 11 },\n        },\n        route: 'game-math',\n    },\n]","import GamesList from \"@/config/gamesList\";\n\nexport default {\n    props: ['gameId', 'modeId'],\n    methods: {\n        buildMode() {\n            this.mode = GamesList.find(v => v.id === this.gameId).modes[this.modeId];\n        }\n    }\n}","<template>\n    <InputResultGame\n        :inputFlag=\"inputFlag\"\n        :resultFlag=\"resultFlag\"\n        :resultList=\"resultList\"\n        :inputList=\"inputList\"\n        @clickTileInput=\"clickTileInput\"\n        @clickTileResult=\"clickTileResult\"\n        @clickControlRefresh=\"gameRefreshLevel\"\n        @clickControlNext=\"gameNextLevel\"\n        @clickControlCheck=\"gameCheckResult\"\n    />\n</template>\n\n<script>\nimport tileMixin from '@/mixins/tileMixin';\nimport tileListMixin from '@/mixins/tileListMixin';\nimport dictionaryMixin from '@/mixins/dictionaryMixin';\nimport inputResultGameMixin from '@/mixins/inputResultGameMixin';\nimport InputResultGame from '@/components/InputResultGame'\nimport modeMixin from '@/mixins/modeMixin'\nimport { arrayFrom } from '@/utils';\n\nexport default {\n    mixins: [\n        tileMixin,\n        tileListMixin,\n        dictionaryMixin,\n        inputResultGameMixin,\n        modeMixin,\n    ],\n    components: {\n        InputResultGame,\n    },\n    data() {\n        return {\n            inputListMask: [],\n            mode: {\n                lang: 'ua',\n                lettersNumber: 3,\n            },\n        };\n    },\n     created() {\n        this.buildMode()\n    },\n    methods: {\n        clickTileInput(inputTile) {\n            if (!this.tileIsUsed(inputTile)) {\n                this.tileBindByTile(this.tileListFindIdle(this.resultList), inputTile, true);\n            }\n        },\n        clickTileResult(resultTile) {\n            if (this.resultFlag !== true && this.tileIsUsed(resultTile)) {\n                this.tileUnbind(this.tileListFindById(this.inputList, resultTile.relationId));\n                this.tileUnbind(resultTile, true);\n            }\n        },\n        buildAssertResult() {\n            const assertResult = this.dictionaryGetAlphabet(this.mode.lang);\n            this.inputListMask = [...arrayFrom(assertResult).keys()]\n                .sort(() => 0.5 - Math.random())\n                .slice(-this.mode.lettersNumber);\n            return assertResult;\n        },\n        buildInputList() {\n            return arrayFrom(this.assertResult)\n                .filter((v,i) => this.inputListMask.indexOf(i) >=0)\n                .sort(() => 0.5 - Math.random())\n                .map(\n                (v, i) => {\n                    return this.tileLetterCreate(i, v);\n                }\n            );\n        },\n        buildResultList() {\n            return arrayFrom(this.assertResult).map((v, i) => {\n                return this.tileLetterCreate(i, this.inputListMask.indexOf(i) >=0 ? null : v);\n            });\n        }\n    },\n}\n</script>","import { render } from \"./AlphabetLettersView.vue?vue&type=template&id=88e8709c\"\nimport script from \"./AlphabetLettersView.vue?vue&type=script&lang=js\"\nexport * from \"./AlphabetLettersView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","name","description","route","modes","lang","lettersNumber","sign","plus","minus","side","right","left","maxSum","minSum","minTerm","maxOneTerm","simplerOrder","maxTerm","props","methods","buildMode","this","mode","GamesList","v","gameId","modeId","_createBlock","_component_InputResultGame","inputFlag","_ctx","resultFlag","resultList","inputList","onClickTileInput","$options","onClickTileResult","onClickControlRefresh","onClickControlNext","onClickControlCheck","mixins","tileMixin","tileListMixin","dictionaryMixin","inputResultGameMixin","modeMixin","components","InputResultGame","data","inputListMask","created","clickTileInput","inputTile","tileIsUsed","tileBindByTile","tileListFindIdle","clickTileResult","resultTile","tileUnbind","tileListFindById","relationId","buildAssertResult","assertResult","dictionaryGetAlphabet","arrayFrom","keys","sort","Math","random","slice","buildInputList","filter","i","indexOf","map","tileLetterCreate","buildResultList","__exports__","render"],"sourceRoot":""}